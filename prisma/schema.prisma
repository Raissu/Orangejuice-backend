generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String       @id @default(uuid())
  name       String
  email      String       @unique
  password   String
  picture    String       @default("")
  role       Role         @default(USER)
  xp         Float        @default(0)
  created_at DateTime     @default(now())
  Dates      Dates[]
  UserTrails UserTrails[]

  @@map("users")
}

model Trails {
  id          Int          @id @default(autoincrement())
  name        String
  hours       Int
  icon        String       @default("")
  description String
  created_at  DateTime     @default(now())
  Contents    Contents[]
  UserTrails  UserTrails[]

  @@map("trails")
}

model Contents {
  id           Int            @id @default(autoincrement())
  title        String
  description  String
  link         String
  type         String
  created_at   DateTime       @default(now())
  trail        Trails         @relation(fields: [trail_id], references: [id])
  trail_id     Int
  category     Category       @relation(fields: [category_id], references: [id])
  category_id  Int
  UserContents UserContents[]

  @@map("contents")
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String
  Contents Contents[]

  @@map("category")
}

model Dates {
  id      Int      @id @default(autoincrement())
  date    DateTime @db.Timestamptz()
  count   Int
  level   Int
  user    Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String

  @@map("dates")
}

model UserTrails {
  user         Users          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id      String
  trail        Trails         @relation(fields: [trail_id], references: [id], onDelete: Cascade)
  trail_id     Int
  UserContents UserContents[]

  @@id([user_id, trail_id])
  @@map("userTrails")
}

model UserContents {
  id                 Int        @id @default(autoincrement())
  status             Status     @default(DEFAULT)
  user_trail         UserTrails @relation(fields: [user_trail_user_id, user_trail_id], references: [user_id, trail_id], onDelete: Cascade)
  user_trail_user_id String
  user_trail_id      Int
  Contents           Contents?  @relation(fields: [contentsId], references: [id], onDelete: Cascade)
  contentsId         Int?

  @@map("userContents")
}

enum Role {
  ADMIN
  USER
}

enum Status {
  DEFAULT
  IN_PROGRESS
  FINISHED
}
